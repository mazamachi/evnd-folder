<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note>
<div style="background-color: #fff; box-sizing: border-box; color: black; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 16px; line-height: 1.6; min-width: 680px; padding: 20px;">
<div style="display: block; width: 100%;" title="evnd-toc-div">
<ul style="list-style-type: none; margin: 15px 10px 15px 0; margin-bottom: 50px; margin-left: 10px; margin-right: 10px; margin-top: 50px; padding-bottom: 3px; padding-left: 10px; padding-right: 10px; padding-top: 3px;" title="evnd-toc">
<li style="border-bottom: 1px solid #ccc; border-left: none; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">A tour of go</a></span></li>
<li style="list-style: none; display: inline">
<ul style="border-left: 1px solid #ccc; list-style-type: none; margin: 15px 10px 15px 0; margin-bottom: 5px; margin-left: 0; margin-right: 0; margin-top: 5px; padding-bottom: 3px; padding-left: 30px; padding-right: 0; padding-top: 3px;">
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">basics</a></span></li>
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">flow control</a></span></li>
<li style="list-style: none; display: inline">
<ul style="border-left: 1px solid #ccc; list-style-type: none; margin: 15px 10px 15px 0; margin-bottom: 5px; margin-left: 0; margin-right: 0; margin-top: 5px; padding-bottom: 3px; padding-left: 30px; padding-right: 0; padding-top: 3px;">
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">Exercise ニュートン法</a></span></li>
</ul>
</li>
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">MoreTypes</a></span></li>
<li style="list-style: none; display: inline">
<ul style="border-left: 1px solid #ccc; list-style-type: none; margin: 15px 10px 15px 0; margin-bottom: 5px; margin-left: 0; margin-right: 0; margin-top: 5px; padding-bottom: 3px; padding-left: 30px; padding-right: 0; padding-top: 3px;">
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">Exercise: Slices</a></span></li>
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">Exercise: Maps</a></span></li>
<li style="border-bottom: 1px dashed #ccc; font: 200 20px/1.5 Helvetica, Verdana, sans-serif; list-style-type: none;"><span style="margin-top: 0;"><a style="-moz-transition: font-size 0.3s ease, background-color 0.3s ease; -ms-transition: font-size 0.3s ease, background-color 0.3s ease; -o-transition: font-size 0.3s ease, background-color 0.3s ease; -webkit-transition: font-size 0.3s ease, background-color 0.3s ease; color: #000; display: block; text-decoration: none; transition: font-size 0.3s ease, background-color 0.3s ease; width: 80%;">Exercise: Fibonacci closure</a></span></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<h1 style="-webkit-font-smoothing: antialiased; border-bottom: 1px solid #ddd; color: #000; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 30px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:a-tour-of-go"/>A tour of go</h1>
<h2 style="-webkit-font-smoothing: antialiased; border-bottom: 1px solid #eee; color: #000; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 26px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:basics"/>basics</h2>
<ul style="margin: 15px 10px 15px 0; padding-left: 30px;">
<li style="list-style-type: disc;">大文字で始まる名前は外部のパッケージから参照できる</li>
<li style="list-style-type: disc;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">func add(x int, y int) int { return x + y }</code> キモw
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">宣言があとにある理由は<a style="color: #4183c4; margin-top: 0;" href="https://blog.golang.org/gos-declaration-syntax">Go's declaration syntax</a>
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: square;">左から右に読むほうが普通でしょって話っぽい</li>
</ul>
</li>
<li style="list-style-type: circle;">省略して <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">add(x, y int)</code> としても良い</li>
</ul>
</li>
<li style="list-style-type: disc;">名前付き戻り値をドキュメント的に使うことが推奨
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 5px; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>split</span></span><span><span>(</span></span><span>sum </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span><span> </span><span><span>(</span></span><span>x</span><span><span>,</span></span><span> y </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #108888;"><span>x</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> sum </span><span style="color: #A71D5D; font-weight: bold;"><span>*</span></span><span> </span><span style="color: #009999;"><span>4</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>/</span></span><span> </span><span style="color: #009999;"><span>9</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #108888;"><span>y</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> sum </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> x</span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre></li>
<li style="list-style-type: disc;">変数宣言は <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">var i int = 1</code>とか、暗黙的な方宣言は <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">k := 2</code> とか</li>
<li style="list-style-type: disc;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">const</code> は64-bit以上の整数を保持できる高精度な値</li>
</ul>
<h2 style="-webkit-font-smoothing: antialiased; border-bottom: 1px solid #eee; color: #000; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 26px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:flow-control"/>flow control</h2>
<ul style="margin: 15px 10px 15px 0; padding-left: 30px;">
<li style="list-style-type: disc;">forとかifは <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">()</code> がいらない</li>
<li style="list-style-type: disc;"><strong style="margin-top: 0;">for は while</strong>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 5px; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #108888;"><span>i</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> i </span><span style="color: #A71D5D; font-weight: bold;"><span>&lt; </span></span><span style="color: #009999;"><span>10</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  i </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre></li>
<li style="list-style-type: disc;">if は条件の前に簡単なステートメントを書け、スコープはifの中だけ
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 5px; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>if</span></span><span> </span><span style="color: #108888;"><span>v</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> math</span><span><span>.</span></span><span style="color: #0086B3;"><span>Pow</span></span><span><span>(</span></span><span>x</span><span><span>,</span></span><span> n</span><span><span>)</span></span><span><span>;</span></span><span> v </span><span style="color: #A71D5D; font-weight: bold;"><span>&lt; </span></span><span>lim </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> v</span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre></li>
<li style="list-style-type: disc;">switchはcaseの最後で自動で気にbrakeする
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">if ... elslif ... elsif ...</code> のかわりに、<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">switch { case ... case ... }</code> を使うらしい</li>
</ul>
</li>
<li style="list-style-type: disc;">defer ステートメントを使うと、関数の実行を呼び出し元の終了まで遅延させる
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">ファイルを開いたりするときに使うっぽい</li>
<li style="list-style-type: circle;">ただし、引数の内容はすぐに評価される</li>
<li style="list-style-type: circle;">stackなので、LIFO</li>
<li style="list-style-type: circle;">詳しくは <a style="color: #4183c4; margin-top: 0;" href="https://blog.golang.org/defer-panic-and-recover">Defer, Panic, and Recover - The Go Blog</a></li>
</ul>
</li>
</ul>
<h3 style="-webkit-font-smoothing: antialiased; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 22px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:exercise-"/>Exercise ニュートン法</h3>
<p style="margin: 15px 10px 15px 0; margin-top: 0;">10回繰り返す</p>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 15px 10px 15px 0; padding: 10px 20px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>package</span></span><span> </span><span style="color: #445588; font-weight: bold;"><span>main</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>import</span></span><span> </span><span><span>(</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span style="color: #445588; font-weight: bold;"><span>fmt</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span></span></span><span style="display: block;"><span><span><span>)</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>Sqrt</span></span><span><span>(</span></span><span>x </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>var</span></span><span> </span><span style="color: #108888;"><span>z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> x</span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>i</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span><span><span>;</span></span><span> i </span><span style="color: #A71D5D; font-weight: bold;"><span>&lt; </span></span><span style="color: #009999;"><span>10</span></span><span><span>;</span></span><span> i</span><span style="color: #A71D5D; font-weight: bold;"><span>++</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> z </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> </span><span><span>(</span></span><span>z</span><span style="color: #A71D5D; font-weight: bold;"><span>*</span></span><span>z </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> x</span><span><span>)</span></span><span style="color: #A71D5D; font-weight: bold;"><span>/</span></span><span><span>(</span></span><span style="color: #009999;"><span>2</span></span><span style="color: #A71D5D; font-weight: bold;"><span>*</span></span><span>z</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>    fmt</span><span><span>.</span></span><span style="color: #0086B3;"><span>Println</span></span><span><span>(</span></span><span>z</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>  </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> z</span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>main</span></span><span><span>(</span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  fmt</span><span><span>.</span></span><span style="color: #0086B3;"><span>Println</span></span><span><span>(</span></span><span style="color: #0086B3;"><span>Sqrt</span></span><span><span>(</span></span><span style="color: #009999;"><span>2</span></span><span><span>)</span><span>)</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<p style="margin: 15px 10px 15px 0;">差が小さくなった時</p>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 15px 10px 15px 0; padding: 10px 20px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>Sqrt</span></span><span><span>(</span></span><span>x </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>var</span></span><span> </span><span style="color: #108888;"><span>z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> x</span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>new_z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> z </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> </span><span><span>(</span></span><span>z</span><span style="color: #A71D5D; font-weight: bold;"><span>*</span></span><span>z </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> x</span><span><span>)</span></span><span style="color: #A71D5D; font-weight: bold;"><span>/</span></span><span><span>(</span></span><span style="color: #009999;"><span>2</span></span><span style="color: #A71D5D; font-weight: bold;"><span>*</span></span><span>z</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>    fmt</span><span><span>.</span></span><span style="color: #0086B3;"><span>Println</span></span><span><span>(</span></span><span>z</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>if</span></span><span> </span><span style="color: #108888;"><span>diff</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> math</span><span><span>.</span></span><span style="color: #0086B3;"><span>Abs</span></span><span><span>(</span></span><span>new_z </span><span style="color: #A71D5D; font-weight: bold;"><span>-</span></span><span> z</span><span><span>)</span></span><span><span>;</span></span><span> diff </span><span style="color: #A71D5D; font-weight: bold;"><span>&lt; </span></span><span style="color: #009999;"><span>0.000001</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #108888;"><span>z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> new_z</span></span></span><span style="display: block;"><span><span>        </span><span style="color: #A71D5D; font-weight: bold;"><span>break</span></span></span></span><span style="display: block;"><span><span>    </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>z</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> new_z</span></span></span><span style="display: block;"><span><span>  </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> z</span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<h2 style="-webkit-font-smoothing: antialiased; border-bottom: 1px solid #eee; color: #000; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 26px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:moretypes"/>MoreTypes</h2>
<ul style="margin: 15px 10px 15px 0; padding-left: 30px;">
<li style="list-style-type: disc;">型Tのポインタは*T, ゼロ値はnil
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">&amp;i</code> や <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">*p</code> は cと一緒</li>
</ul>
</li>
<li style="list-style-type: disc;">struct は fieldの集まり
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 5px; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>type</span></span><span> </span><span style="color: #445588; font-weight: bold;"><span>Vertex</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>struct</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  X </span><span style="color: #000000; font-weight: bold;"><span>int</span></span></span></span><span style="display: block;"><span><span>  Y </span><span style="color: #000000; font-weight: bold;"><span>int</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">フィールドには <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">.</code> でアクセス (<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">v.X</code> など)</li>
<li style="list-style-type: circle;">ポインタを通して、 <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">p.X</code> ともできる(<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">(*p).X</code>ともできる)</li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">Vertex{X:1}</code> のように、名前付きで列挙することも可能</li>
</ul>
</li>
<li style="list-style-type: disc;">配列は、<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">var a [10]int</code> のようにする
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">サイズは変えられない</li>
<li style="list-style-type: circle;">スライス <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">[]int</code> は可変長</li>
<li style="list-style-type: circle;">スライスは配列の一部を指し示しているだけなので、もとの配列の変更が反映される</li>
<li style="list-style-type: circle;"><strong style="margin-top: 0;">スライスのリテラルは長さのない配列リテラルのようなもの</strong></li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">len(s)</code>は要素数、<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; padding: 0 5px; text-shadow: none; white-space: nowrap;">cap(s)</code>はもとの配列の要素数</li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">a := make([]int, 5)</code> =&gt; 長さ5のゼロ化されたスライス</li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">append(s [T], vs ...T) []T</code> でappendできる</li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">range s</code> ってすると反復処理できる
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 0; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>var</span></span><span> </span><span style="color: #108888;"><span>pow</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> </span><span><span>[</span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>{</span></span><span style="color: #009999;"><span>1</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>2</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>4</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>8</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>16</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>32</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>64</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>128</span></span><span><span>}</span></span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>i</span></span><span><span>,</span></span><span> </span><span style="color: #108888;"><span>v</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>range</span></span><span> pow </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  fmt</span><span><span>.</span></span><span style="color: #0086B3;"><span>Printf</span></span><span><span>(</span></span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span>2**</span><span style="color: #333333;"><span>%d</span></span><span> = </span><span style="color: #333333;"><span>%d</span></span><span style="color: #F7A357;"><span>\n</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span><span><span>,</span></span><span> i</span><span><span>,</span></span><span> v</span><span><span>)</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre></li>
</ul>
</li>
<li style="list-style-type: disc;">map[key T]val S でhashみたいなのが作れる
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">初期化は<code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">make(map[string]Vertex)</code>みたいな</li>
<li style="list-style-type: circle;">更新、取得はrubyとかと一緒</li>
<li style="list-style-type: circle;"><code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">delete(m, key)</code></li>
<li style="list-style-type: circle;">2つめの返り値で存在確認 <code style="background-color: #fbf6f8; border: 1px solid #f3e4ea; border-radius: 3px; color: #c7254e; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 0 2px; margin-top: 0; padding: 0 5px; text-shadow: none; white-space: nowrap;">elem, ok = m[key]</code></li>
</ul>
</li>
<li style="list-style-type: disc;">関数も変数!
<ul style="margin: 15px 10px 15px 0; margin-bottom: 0; margin-top: 0; padding-left: 30px;">
<li style="list-style-type: circle;">返り値に取れるので、
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 5px; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>compute</span></span><span><span>(</span></span><span>fn </span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span><span>(</span></span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span><span>,</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>float64</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> </span><span style="color: #0086B3;"><span>fn</span></span><span><span>(</span></span><span style="color: #009999;"><span>3</span></span><span><span>,</span></span><span> </span><span style="color: #009999;"><span>4</span></span><span><span>)</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
みたいなことも可能</li>
<li style="list-style-type: circle;">Goの関数はクロージャ!!
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 5px 10px 5px 0; margin-bottom: 0; margin-top: 5px; padding: 10px 20px; vertical-align: top; white-space: pre-wrap; width: 100%; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>adder</span></span><span><span>(</span><span>)</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span><span>(</span></span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #108888;"><span>sum</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span></span></span><span style="display: block;"><span><span>  </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span><span>(</span></span><span>x </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    sum </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> x</span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> sum</span></span></span><span style="display: block;"><span><span>  </span><span><span>}</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre></li>
</ul>
</li>
</ul>
<h3 style="-webkit-font-smoothing: antialiased; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 22px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:exercise-slices"/>Exercise: Slices</h3>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 15px 10px 15px 0; padding: 10px 20px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>package</span></span><span> </span><span style="color: #445588; font-weight: bold;"><span>main</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>import</span></span><span> </span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span style="color: #445588; font-weight: bold;"><span>golang.org/x/tour/pic</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>Pic</span></span><span><span>(</span></span><span>dx</span><span><span>,</span></span><span> dy </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span><span> </span><span><span>[</span><span>]</span><span>[</span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>uint8</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>pic</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>make</span></span><span><span>(</span></span><span><span>[</span><span>]</span><span>[</span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>uint8</span></span><span><span>,</span></span><span> dy</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>y</span></span><span><span>,</span></span><span> </span><span style="color: #108888;"><span>_</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>range</span></span><span><span>(</span></span><span>pic</span><span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        pic</span><span><span>[</span></span><span>y</span><span><span>]</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> </span><span style="color: #0086B3;"><span>make</span></span><span><span>(</span></span><span><span>[</span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>uint8</span></span><span><span>,</span></span><span> dx</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>x</span></span><span><span>,</span></span><span> </span><span style="color: #108888;"><span>_</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>range</span></span><span><span>(</span></span><span>pic</span><span><span>[</span></span><span>y</span><span><span>]</span></span><span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>            pic</span><span><span>[</span></span><span>y</span><span><span>]</span><span>[</span></span><span>x</span><span><span>]</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> </span><span><span>(</span></span><span style="color: #000000; font-weight: bold;"><span>uint8</span></span><span><span>)</span></span><span> </span><span><span>(</span></span><span>x</span><span style="color: #A71D5D; font-weight: bold;"><span>^</span></span><span>y</span><span><span>)</span></span></span></span><span style="display: block;"><span><span>        </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>    </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> pic</span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>main</span></span><span><span>(</span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    pic</span><span><span>.</span></span><span style="color: #0086B3;"><span>Show</span></span><span><span>(</span></span><span>Pic</span><span><span>)</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<h3 style="-webkit-font-smoothing: antialiased; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 22px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:exercise-maps"/>Exercise: Maps</h3>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 15px 10px 15px 0; padding: 10px 20px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>package</span></span><span> </span><span style="color: #445588; font-weight: bold;"><span>main</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>import</span></span><span> </span><span><span>(</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span style="color: #445588; font-weight: bold;"><span>golang.org/x/tour/wc</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span style="color: #445588; font-weight: bold;"><span>strings</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span></span></span><span style="display: block;"><span><span><span>)</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>WordCount</span></span><span><span>(</span></span><span>s </span><span style="color: #DD1144; font-weight: bold;"><span>string</span></span><span><span>)</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>map</span></span><span><span>[</span></span><span style="color: #DD1144; font-weight: bold;"><span>string</span></span><span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>m</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>make</span></span><span><span>(</span></span><span style="color: #A71D5D; font-weight: bold;"><span>map</span></span><span><span>[</span></span><span style="color: #DD1144; font-weight: bold;"><span>string</span></span><span><span>]</span></span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span><span>)</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>_</span></span><span><span>,</span></span><span> </span><span style="color: #108888;"><span>word</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>range</span></span><span><span>(</span></span><span>strings</span><span><span>.</span></span><span style="color: #0086B3;"><span>Fields</span></span><span><span>(</span></span><span>s</span><span><span>)</span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        m</span><span><span>[</span></span><span>word</span><span><span>]</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>    </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> m</span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>main</span></span><span><span>(</span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    wc</span><span><span>.</span></span><span style="color: #0086B3;"><span>Test</span></span><span><span>(</span></span><span>WordCount</span><span><span>)</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<h3 style="-webkit-font-smoothing: antialiased; cursor: text; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 22px; font-weight: bold; margin: 20px 0 10px; padding: 0 0 10px 0; position: relative;"><a style="color: #4183c4;" name="toc:exercise-fibonacci-closure"/>Exercise: Fibonacci closure</h3>
<pre style="background-color: #ececec; border-radius: 2px; color: #000000; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 16px; font-weight: inherit; line-height: 1.6; margin: 15px 10px 15px 0; padding: 10px 20px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;" title="fenced-code-block-go">
<span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>package</span></span><span> </span><span style="color: #445588; font-weight: bold;"><span>main</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>import</span></span><span> </span><span style="color: #DD1144;"><span style="color: #DD1144;"><span>&quot;</span></span><span style="color: #445588; font-weight: bold;"><span>fmt</span></span><span style="color: #DD1144;"><span>&quot;</span></span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #999988; font-style: italic;"><span style="color: #999988; font-style: italic;"><span>//</span></span><span> fibonacci is a function that returns</span></span></span></span><span style="display: block;"><span><span style="color: #999988; font-style: italic;"><span style="color: #999988; font-style: italic;"><span>//</span></span><span> a function that returns an int.</span></span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>fibonacci</span></span><span><span>(</span><span>)</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span><span>(</span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>prev</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>now</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>idx</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> </span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span><span>(</span><span>)</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>int</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #0086B3;"><span>switch</span></span><span><span>(</span></span><span>idx</span><span><span>)</span></span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #A71D5D; font-weight: bold;"><span>case</span></span><span> </span><span style="color: #009999;"><span>0</span></span><span><span>:</span></span></span></span><span style="display: block;"><span><span>            idx </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>            </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> </span><span style="color: #009999;"><span>0</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #A71D5D; font-weight: bold;"><span>case</span></span><span> </span><span style="color: #009999;"><span>1</span></span><span><span>:</span></span></span></span><span style="display: block;"><span><span>            idx </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>            </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>        </span><span style="color: #A71D5D; font-weight: bold;"><span>default</span></span><span><span>:</span></span></span></span><span style="display: block;"><span><span>            idx </span><span style="color: #000000; font-weight: bold;"><span>+=</span></span><span> </span><span style="color: #009999;"><span>1</span></span></span></span><span style="display: block;"><span><span>            </span><span style="color: #108888;"><span>prev</span></span><span><span>,</span></span><span> </span><span style="color: #108888;"><span>now</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>=</span></span><span> now</span><span><span>,</span></span><span> prev </span><span style="color: #A71D5D; font-weight: bold;"><span>+</span></span><span> now</span></span></span><span style="display: block;"><span><span>            </span><span style="color: #A71D5D; font-weight: bold;"><span>return</span></span><span> now</span></span></span><span style="display: block;"><span><span>        </span><span><span>}</span></span></span></span><span style="display: block;"><span><span>    </span><span><span>}</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span><span style="display: block;"><span><span> </span></span></span><span style="display: block;"><span><span style="color: #A71D5D; font-weight: bold;"><span>func</span></span><span> </span><span style="color: #990000; font-weight: bold;"><span>main</span></span><span><span>(</span><span>)</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #108888;"><span>f</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #0086B3;"><span>fibonacci</span></span><span><span>(</span><span>)</span></span></span></span><span style="display: block;"><span><span>    </span><span style="color: #A71D5D; font-weight: bold;"><span>for</span></span><span> </span><span style="color: #108888;"><span>i</span></span><span> </span><span style="color: #000000; font-weight: bold;"><span>:=</span></span><span> </span><span style="color: #009999;"><span>0</span></span><span><span>;</span></span><span> i </span><span style="color: #A71D5D; font-weight: bold;"><span>&lt; </span></span><span style="color: #009999;"><span>10</span></span><span><span>;</span></span><span> i</span><span style="color: #A71D5D; font-weight: bold;"><span>++</span></span><span> </span><span><span>{</span></span></span></span><span style="display: block;"><span><span>        fmt</span><span><span>.</span></span><span style="color: #0086B3;"><span>Println</span></span><span><span>(</span></span><span style="color: #0086B3;"><span>f</span></span><span><span>(</span><span>)</span><span>)</span></span></span></span><span style="display: block;"><span><span>    </span><span><span>}</span></span></span></span><span style="display: block;"><span><span><span>}</span></span></span></span>
</pre>
<div style="display: none; margin-bottom: 0;" title="evnd-note-id">
<p style="margin: 15px 10px 15px 0;">[Note ID: ae84abfed0bcc4e5261ff25fbbfbaf51]</p>
<div style="display: none;" title="evnd-time-stamp">
<p>2017-03-23 13:12:20</p>
</div>
</div>
</div>
</en-note>

